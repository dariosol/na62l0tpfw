Project:              monitor
Index Version:        3997696
Build Configuration:  Nios II
File:      file:/C:/Stefano/PCIe-new/src/mac/sopc/software/monitor/monitor.c
Context:   file:/C:/Stefano/PCIe-new/src/mac/sopc/software/monitor/monitor.c
Language:  GNU C

Include Search Path (option -I):
   C:\Stefano\PCIe-new\src\mac\sopc\software\monitor_bsp
   C:\Stefano\PCIe-new\src\mac\sopc\software\monitor_bsp\drivers\inc
   C:\Stefano\PCIe-new\src\mac\sopc\software\monitor_bsp\HAL\inc
   c:\altera\q91\nios2eds\bin\nios2-gnutools\H-i686-pc-cygwin\lib\gcc\nios2-elf\3.4.6\include
   c:\altera\q91\nios2eds\bin\nios2-gnutools\H-i686-pc-cygwin\nios2-elf\include

Local Include Search Path (option -iquote):

Preincluded files (option -include):

Preincluded macro files (option -imacros):

Macro definitions (option -D):
   ALT_NO_CLEAN_EXIT=1
   ALT_NO_C_PLUS_PLUS=1
   ALT_NO_EXIT=1
   ALT_NO_INSTRUCTION_EMULATION=1
   ALT_SINGLE_THREADED=1
   ALT_USE_DIRECT_DRIVERS=1
   ALT_USE_SMALL_DRIVERS=1
   nios2=1
   nios2_little_endian=1
   SYSTEM_BUS_WIDTH=32
   __ELF__=1
   __hal__=1
   __nios2=1
   __nios2_little_endian=1
   __nios2_little_endian__=1
   __NIOS2__=1
   __OPTIMIZE_SIZE__=1
   __OPTIMIZE__=1

Macro definitions (from configuration + headers in index):
   ALT_ALLOW_CODE_AT_RESET=
   ALT_ALWAYS_INLINE=__attribute__ ((always_inline))
   ALT_CPU_ARCHITECTURE="altera_nios2"
   ALT_CPU_FREQ=50000000
   ALT_CPU_NAME="cpu"
   ALT_DEVICE_FAMILY="STRATIXIV"
   ALT_ENHANCED_INTERRUPT_API_PRESENT=
   ALT_EXCEPTIONS_DEVICE=MEM
   ALT_INLINE=__inline__
   ALT_IRQ_BASE=NULL
   ALT_LOAD_EXPLICITLY_CONTROLLED=
   ALT_LOG_PORT="/dev/null"
   ALT_LOG_PORT_BASE=0x0
   ALT_LOG_PORT_DEV=null
   ALT_LOG_PORT_TYPE=""
   ALT_MAX_FD=4
   ALT_MODULE_CLASS_iobusMAC_0=MMslaveint
   ALT_MODULE_CLASS_iobusMAC_1=MMslaveint
   ALT_MODULE_CLASS_iobusMAC_2=MMslaveint
   ALT_MODULE_CLASS_iobusMAC_3=MMslaveint
   ALT_MODULE_CLASS_iobusMAC_4=MMslaveint
   ALT_MODULE_CLASS_iobusMAC_5=MMslaveint
   ALT_MODULE_CLASS_iobusMAC_6=MMslaveint
   ALT_MODULE_CLASS_iobusMAC_7=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_0=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_1=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_2=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_3=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_4=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_5=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_6=MMslaveint
   ALT_MODULE_CLASS_iobusMDIO_7=MMslaveint
   ALT_MODULE_CLASS_jtag_uart=altera_avalon_jtag_uart
   ALT_MODULE_CLASS_mem=altera_avalon_onchip_memory2
   ALT_MODULE_CLASS_rs232_uart=altera_avalon_uart
   ALT_NUM_EXTERNAL_INTERRUPT_CONTROLLERS=0
   ALT_NUM_INTERNAL_INTERRUPT_CONTROLLERS=1
   ALT_NUM_INTERRUPT_CONTROLLERS=1
   ALT_RESET_DEVICE=MEM
   ALT_RODATA_DEVICE=MEM
   ALT_RWDATA_DEVICE=MEM
   ALT_STDERR="/dev/jtag_uart"
   ALT_STDERR_BASE=0x800
   ALT_STDERR_DEV=jtag_uart
   ALT_STDERR_PRESENT=
   ALT_STDERR_TYPE="altera_avalon_jtag_uart"
   ALT_STDIN="/dev/jtag_uart"
   ALT_STDIN_BASE=0x800
   ALT_STDIN_DEV=jtag_uart
   ALT_STDIN_PRESENT=
   ALT_STDIN_TYPE="altera_avalon_jtag_uart"
   ALT_STDOUT="/dev/jtag_uart"
   ALT_STDOUT_BASE=0x800
   ALT_STDOUT_DEV=jtag_uart
   ALT_STDOUT_PRESENT=
   ALT_STDOUT_TYPE="altera_avalon_jtag_uart"
   ALT_SYSTEM_NAME="nios"
   ALT_SYS_CLK=none
   ALT_TEXT_DEVICE=MEM
   ALT_TIMESTAMP_CLK=none
   ALT_WEAK=__attribute__((weak))
   BUFSIZ=1024
   clearerr(p)=__sclearerr(p)
   E2BIG=7
   EACCES=13
   EADDRINUSE=112
   EADDRNOTAVAIL=125
   EADV=68
   EAFNOSUPPORT=106
   EAGAIN=11
   EALREADY=120
   EBADE=50
   EBADF=9
   EBADFD=81
   EBADMSG=77
   EBADR=51
   EBADRQC=54
   EBADSLT=55
   EBFONT=57
   EBUSY=16
   ECASECLASH=137
   ECHILD=10
   ECHRNG=37
   ECOMM=70
   ECONNABORTED=113
   ECONNREFUSED=111
   ECONNRESET=104
   EDEADLK=45
   EDEADLOCK=56
   EDESTADDRREQ=121
   EDOM=33
   EDOTDOT=76
   EDQUOT=132
   EEXIST=17
   EFAULT=14
   EFBIG=27
   EFTYPE=79
   EHOSTDOWN=117
   EHOSTUNREACH=118
   EIDRM=36
   EILSEQ=138
   EINPROGRESS=119
   EINTR=4
   EINVAL=22
   EIO=5
   EISCONN=127
   EISDIR=21
   EL2HLT=44
   EL2NSYNC=38
   EL3HLT=39
   EL3RST=40
   ELBIN=75
   ELIBACC=83
   ELIBBAD=84
   ELIBEXEC=87
   ELIBMAX=86
   ELIBSCN=85
   ELNRNG=41
   ELOOP=92
   EMFILE=24
   EMLINK=31
   EMSGSIZE=122
   EMULTIHOP=74
   ENAMETOOLONG=91
   ENETDOWN=115
   ENETRESET=126
   ENETUNREACH=114
   ENFILE=23
   ENMFILE=89
   ENOANO=53
   ENOBUFS=105
   ENOCSI=43
   ENODATA=61
   ENODEV=19
   ENOENT=2
   ENOEXEC=8
   ENOLCK=46
   ENOLINK=67
   ENOMEDIUM=135
   ENOMEM=12
   ENOMSG=35
   ENONET=64
   ENOPKG=65
   ENOPROTOOPT=109
   ENOSHARE=136
   ENOSPC=28
   ENOSR=63
   ENOSTR=60
   ENOSYS=88
   ENOTBLK=15
   ENOTCONN=128
   ENOTDIR=20
   ENOTEMPTY=90
   ENOTSOCK=108
   ENOTSUP=134
   ENOTTY=25
   ENOTUNIQ=80
   ENXIO=6
   EOF=(-1)
   EOPNOTSUPP=95
   EOVERFLOW=139
   EPERM=1
   EPFNOSUPPORT=96
   EPIPE=32
   EPROCLIM=130
   EPROTO=71
   EPROTONOSUPPORT=123
   EPROTOTYPE=107
   ERANGE=34
   EREMCHG=82
   EREMOTE=66
   EROFS=30
   errno=(*__errno())
   ESHUTDOWN=110
   ESOCKTNOSUPPORT=124
   ESPIPE=29
   ESRCH=3
   ESRMNT=69
   ESTALE=133
   ETIME=62
   ETIMEDOUT=116
   ETOOMANYREFS=129
   ETXTBSY=26
   EUNATCH=42
   EUSERS=131
   EWOULDBLOCK=EAGAIN
   EXDEV=18
   EXFULL=52
   EXIT_FAILURE=1
   EXIT_SUCCESS=0
   fast_putc(x,p)=(--(p)->_w < 0 ? __swbuf((int)(x), p) == EOF : (*(p)->_p = (x), (p)->_p++, 0))
   FD_CLR(n,p)=((p)->fds_bits[(n)/NFDBITS] &= ~(1L << ((n) % NFDBITS)))
   FD_ISSET(n,p)=((p)->fds_bits[(n)/NFDBITS] & (1L << ((n) % NFDBITS)))
   FD_SET(n,p)=((p)->fds_bits[(n)/NFDBITS] |= (1L << ((n) % NFDBITS)))
   fd_set=_types_fd_set
   FD_SETSIZE=64
   FD_ZERO(p)=(__extension__ (void)({ size_t __i; char *__tmp = (char *)p; for (__i = 0; __i < sizeof (*(p)); ++__i) *__tmp++ = 0; }))
   feof(p)=__sfeof(p)
   ferror(p)=__sferror(p)
   FILENAME_MAX=1024
   FOPEN_MAX=20
   fropen(cookie,fn)=funopen(cookie, fn, (int (*)())0, (fpos_t (*)())0, (int (*)())0)
   fwopen(cookie,fn)=funopen(cookie, (int (*)())0, fn, (fpos_t (*)())0, (int (*)())0)
   F_OK=0
   getchar()=getc(stdin)
   howmany(x,y)=(((x)+((y)-1))/(y))
   IOBUSMAC_0_BASE=0x840
   IOBUSMAC_0_IRQ=-1
   IOBUSMAC_0_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_0_NAME="/dev/iobusMAC_0"
   IOBUSMAC_0_SPAN=64
   IOBUSMAC_0_TYPE="MMslaveint"
   IOBUSMAC_1_BASE=0x880
   IOBUSMAC_1_IRQ=-1
   IOBUSMAC_1_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_1_NAME="/dev/iobusMAC_1"
   IOBUSMAC_1_SPAN=64
   IOBUSMAC_1_TYPE="MMslaveint"
   IOBUSMAC_2_BASE=0x8c0
   IOBUSMAC_2_IRQ=-1
   IOBUSMAC_2_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_2_NAME="/dev/iobusMAC_2"
   IOBUSMAC_2_SPAN=64
   IOBUSMAC_2_TYPE="MMslaveint"
   IOBUSMAC_3_BASE=0x900
   IOBUSMAC_3_IRQ=-1
   IOBUSMAC_3_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_3_NAME="/dev/iobusMAC_3"
   IOBUSMAC_3_SPAN=64
   IOBUSMAC_3_TYPE="MMslaveint"
   IOBUSMAC_4_BASE=0x940
   IOBUSMAC_4_IRQ=-1
   IOBUSMAC_4_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_4_NAME="/dev/iobusMAC_4"
   IOBUSMAC_4_SPAN=64
   IOBUSMAC_4_TYPE="MMslaveint"
   IOBUSMAC_5_BASE=0x980
   IOBUSMAC_5_IRQ=-1
   IOBUSMAC_5_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_5_NAME="/dev/iobusMAC_5"
   IOBUSMAC_5_SPAN=64
   IOBUSMAC_5_TYPE="MMslaveint"
   IOBUSMAC_6_BASE=0x9c0
   IOBUSMAC_6_IRQ=-1
   IOBUSMAC_6_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_6_NAME="/dev/iobusMAC_6"
   IOBUSMAC_6_SPAN=64
   IOBUSMAC_6_TYPE="MMslaveint"
   IOBUSMAC_7_BASE=0xa00
   IOBUSMAC_7_IRQ=-1
   IOBUSMAC_7_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMAC_7_NAME="/dev/iobusMAC_7"
   IOBUSMAC_7_SPAN=64
   IOBUSMAC_7_TYPE="MMslaveint"
   IOBUSMDIO_0_BASE=0xb00
   IOBUSMDIO_0_IRQ=-1
   IOBUSMDIO_0_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_0_NAME="/dev/iobusMDIO_0"
   IOBUSMDIO_0_SPAN=16
   IOBUSMDIO_0_TYPE="MMslaveint"
   IOBUSMDIO_1_BASE=0xb10
   IOBUSMDIO_1_IRQ=-1
   IOBUSMDIO_1_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_1_NAME="/dev/iobusMDIO_1"
   IOBUSMDIO_1_SPAN=16
   IOBUSMDIO_1_TYPE="MMslaveint"
   IOBUSMDIO_2_BASE=0xb20
   IOBUSMDIO_2_IRQ=-1
   IOBUSMDIO_2_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_2_NAME="/dev/iobusMDIO_2"
   IOBUSMDIO_2_SPAN=16
   IOBUSMDIO_2_TYPE="MMslaveint"
   IOBUSMDIO_3_BASE=0xb30
   IOBUSMDIO_3_IRQ=-1
   IOBUSMDIO_3_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_3_NAME="/dev/iobusMDIO_3"
   IOBUSMDIO_3_SPAN=16
   IOBUSMDIO_3_TYPE="MMslaveint"
   IOBUSMDIO_4_BASE=0xb40
   IOBUSMDIO_4_IRQ=-1
   IOBUSMDIO_4_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_4_NAME="/dev/iobusMDIO_4"
   IOBUSMDIO_4_SPAN=16
   IOBUSMDIO_4_TYPE="MMslaveint"
   IOBUSMDIO_5_BASE=0xb50
   IOBUSMDIO_5_IRQ=-1
   IOBUSMDIO_5_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_5_NAME="/dev/iobusMDIO_5"
   IOBUSMDIO_5_SPAN=16
   IOBUSMDIO_5_TYPE="MMslaveint"
   IOBUSMDIO_6_BASE=0xb60
   IOBUSMDIO_6_IRQ=-1
   IOBUSMDIO_6_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_6_NAME="/dev/iobusMDIO_6"
   IOBUSMDIO_6_SPAN=16
   IOBUSMDIO_6_TYPE="MMslaveint"
   IOBUSMDIO_7_BASE=0xb70
   IOBUSMDIO_7_IRQ=-1
   IOBUSMDIO_7_IRQ_INTERRUPT_CONTROLLER_ID=-1
   IOBUSMDIO_7_NAME="/dev/iobusMDIO_7"
   IOBUSMDIO_7_SPAN=16
   IOBUSMDIO_7_TYPE="MMslaveint"
   IORD(BASE,REGNUM)=__builtin_ldwio (__IO_CALC_ADDRESS_NATIVE ((BASE), (REGNUM)))
   IORD_16DIRECT(BASE,OFFSET)=__builtin_ldhuio (__IO_CALC_ADDRESS_DYNAMIC ((BASE), (OFFSET)))
   IORD_32DIRECT(BASE,OFFSET)=__builtin_ldwio (__IO_CALC_ADDRESS_DYNAMIC ((BASE), (OFFSET)))
   IORD_8DIRECT(BASE,OFFSET)=__builtin_ldbuio (__IO_CALC_ADDRESS_DYNAMIC ((BASE), (OFFSET)))
   IOWR(BASE,REGNUM,DATA)=__builtin_stwio (__IO_CALC_ADDRESS_NATIVE ((BASE), (REGNUM)), (DATA))
   IOWR_16DIRECT(BASE,OFFSET,DATA)=__builtin_sthio (__IO_CALC_ADDRESS_DYNAMIC ((BASE), (OFFSET)), (DATA))
   IOWR_32DIRECT(BASE,OFFSET,DATA)=__builtin_stwio (__IO_CALC_ADDRESS_DYNAMIC ((BASE), (OFFSET)), (DATA))
   IOWR_8DIRECT(BASE,OFFSET,DATA)=__builtin_stbio (__IO_CALC_ADDRESS_DYNAMIC ((BASE), (OFFSET)), (DATA))
   isalnum(c)=((_ctype_+1)[(unsigned)(c)]&(_U|_L|_N))
   isalpha(c)=((_ctype_+1)[(unsigned)(c)]&(_U|_L))
   isascii(c)=((unsigned)(c)<=0177)
   iscntrl(c)=((_ctype_+1)[(unsigned)(c)]&_C)
   isdigit(c)=((_ctype_+1)[(unsigned)(c)]&_N)
   isgraph(c)=((_ctype_+1)[(unsigned)(c)]&(_P|_U|_L|_N))
   islower(c)=((_ctype_+1)[(unsigned)(c)]&_L)
   isprint(c)=((_ctype_+1)[(unsigned)(c)]&(_P|_U|_L|_N|_B))
   ispunct(c)=((_ctype_+1)[(unsigned)(c)]&_P)
   isspace(c)=((_ctype_+1)[(unsigned)(c)]&_S)
   isupper(c)=((_ctype_+1)[(unsigned)(c)]&_U)
   isxdigit(c)=((_ctype_+1)[(unsigned)(c)]&(_X|_N))
   JTAG_UART_BASE=0x800
   JTAG_UART_IRQ=0
   JTAG_UART_IRQ_INTERRUPT_CONTROLLER_ID=0
   JTAG_UART_NAME="/dev/jtag_uart"
   JTAG_UART_READ_DEPTH=64
   JTAG_UART_READ_THRESHOLD=8
   JTAG_UART_SPAN=8
   JTAG_UART_TYPE="altera_avalon_jtag_uart"
   JTAG_UART_WRITE_DEPTH=64
   JTAG_UART_WRITE_THRESHOLD=8
   L_cuserid=9
   L_tmpnam=FILENAME_MAX
   MAXPATHLEN=1024
   MB_CUR_MAX=__mb_cur_max
   MEM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR=0
   MEM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE=0
   MEM_BASE=0x2000
   MEM_CONTENTS_INFO=""
   MEM_DUAL_PORT=0
   MEM_GUI_RAM_BLOCK_TYPE="Automatic"
   MEM_INIT_CONTENTS_FILE="mem"
   MEM_INIT_MEM_CONTENT=1
   MEM_INSTANCE_ID="NONE"
   MEM_IRQ=-1
   MEM_IRQ_INTERRUPT_CONTROLLER_ID=-1
   MEM_NAME="/dev/mem"
   MEM_NON_DEFAULT_INIT_FILE_ENABLED=1
   MEM_RAM_BLOCK_TYPE="Auto"
   MEM_READ_DURING_WRITE_MODE="DONT_CARE"
   MEM_REGION_BASE=0x2020
   MEM_REGION_SPAN=8160
   MEM_SIZE_MULTIPLE=1
   MEM_SIZE_VALUE=8192u
   MEM_SPAN=8192
   MEM_TYPE="altera_avalon_onchip_memory2"
   MEM_WRITABLE=1
   NBBY=8
   NFDBITS=(sizeof (fd_mask) * NBBY)
   NIOS2_BIG_ENDIAN=0
   NIOS2_BREAK_ADDR=0x20
   NIOS2_CPU_FREQ=50000000u
   NIOS2_CPU_ID_SIZE=1
   NIOS2_CPU_ID_VALUE=0x0
   NIOS2_CPU_IMPLEMENTATION="tiny"
   NIOS2_DATA_ADDR_WIDTH=14
   NIOS2_DCACHE_LINE_SIZE=0
   NIOS2_DCACHE_LINE_SIZE_LOG2=0
   NIOS2_DCACHE_SIZE=0
   NIOS2_EXCEPTION_ADDR=0x2020
   NIOS2_FLUSHDA_SUPPORTED=
   NIOS2_HARDWARE_DIVIDE_PRESENT=0
   NIOS2_HARDWARE_MULTIPLY_PRESENT=0
   NIOS2_HARDWARE_MULX_PRESENT=0
   NIOS2_HAS_DEBUG_CORE=1
   NIOS2_HAS_DEBUG_STUB=
   NIOS2_HAS_JMPI_INSTRUCTION=
   NIOS2_ICACHE_LINE_SIZE=0
   NIOS2_ICACHE_LINE_SIZE_LOG2=0
   NIOS2_ICACHE_SIZE=0
   NIOS2_INST_ADDR_WIDTH=14
   NIOS2_RESET_ADDR=0x2000
   NULL=((void *)0)
   offsetof(TYPE,MEMBER)=((size_t) &((TYPE *)0)->MEMBER)
   physadr=physadr_t
   putchar(x)=putc(x, stdout)
   P_tmpdir="/tmp"
   quad=quad_t
   RAND_MAX=__RAND_MAX
   RESET_REGION_BASE=0x2000
   RESET_REGION_SPAN=32
   RS232_UART_BASE=0x820
   RS232_UART_BAUD=19200
   RS232_UART_DATA_BITS=8
   RS232_UART_FIXED_BAUD=1
   RS232_UART_FREQ=50000000u
   RS232_UART_IRQ=1
   RS232_UART_IRQ_INTERRUPT_CONTROLLER_ID=0
   RS232_UART_NAME="/dev/rs232_uart"
   RS232_UART_PARITY='N'
   RS232_UART_SIM_CHAR_STREAM=""
   RS232_UART_SIM_TRUE_BAUD=0
   RS232_UART_SPAN=32
   RS232_UART_STOP_BITS=1
   RS232_UART_SYNC_REG_DEPTH=2
   RS232_UART_TYPE="altera_avalon_uart"
   RS232_UART_USE_CTS_RTS=0
   RS232_UART_USE_EOP_REGISTER=0
   R_OK=4
   SEEK_CUR=1
   SEEK_END=2
   SEEK_SET=0
   stderr=(_REENT->_stderr)
   STDERR_FILENO=2
   stdin=(_REENT->_stdin)
   STDIN_FILENO=0
   stdout=(_REENT->_stdout)
   STDOUT_FILENO=1
   strcmpi=strcasecmp
   stricmp=strcasecmp
   strncmpi=strncasecmp
   strnicmp=strncasecmp
   strtodf=strtof
   TMP_MAX=26
   toascii(c)=((c)&0177)
   va_arg(v,l)=__builtin_va_arg(v,l)
   va_copy(d,s)=__builtin_va_copy(d,s)
   va_end(v)=__builtin_va_end(v)
   va_start(v,l)=__builtin_va_start(v,l)
   W_OK=2
   X_OK=1
   _ALT_GETCH_JTAG_UART_H_=
   _ALT_GETCH_RS232_UART_H_=
   _ALT_PUTCH_JTAG_UART_H_=
   _ALT_PUTCH_RS232_UART_H_=
   _ALT_PUTSTR_JTAG_UART_H_=
   _ALT_PUTSTR_RS232_UART_H_=
   _AND=,
   _ANSIDECL_H_=
   _ANSI_STDARG_H_=
   _ANSI_STDDEF_H=
   _ATEXIT_SIZE=32
   _ATTRIBUTE(attrs)=
   _B=0200
   _BEGIN_STD_C=
   _BSDTYPES_DEFINED=
   _BSD_PTRDIFF_T_=
   _BSD_SIZE_T_=
   _BSD_SIZE_T_DEFINED_=
   _BSD_WCHAR_T_=
   _C=040
   _CAST_VOID=(void)
   _CLOCKID_T_=unsigned long
   _CLOCK_T_=unsigned long
   _CONST=const
   _CTYPE_H_=
   _DEFUN(name,arglist,args)=name(args)
   _DEFUN_VOID(name)=name(_NOARGS)
   _DOTS=, ...
   _END_STD_C=
   _EXFUN(name,proto)=name proto
   _EXPARM(name,proto)=(* name) proto
   _flockfile(fp)=
   _FSTDIO=
   _funlockfile(fp)=
   _GCC_PTRDIFF_T=
   _GCC_SIZE_T=
   _GCC_WCHAR_T=
   _GLOBAL_REENT=_impure_ptr
   _HAVE_STDC=
   _IOFBF=0
   _IOLBF=1
   _IONBF=2
   _L=02
   _LONG_DOUBLE=long double
   _MACHSTDLIB_H_=
   _MACHTYPES_H_=
   _MB_LEN_MAX=1
   _N=04
   _NEWLIB_ALLOCA_H=
   _NEWLIB_STDIO_H=
   _NEWLIB_VERSION="1.12.0"
   _NOARGS=void
   _NULL=0
   _N_LISTS=30
   _P=020
   _PARAMS(paramlist)=paramlist
   _PC_ASYNC_IO=9
   _PC_CHOWN_RESTRICTED=6
   _PC_LINK_MAX=0
   _PC_MAX_CANON=1
   _PC_MAX_INPUT=2
   _PC_NAME_MAX=3
   _PC_NO_TRUNC=7
   _PC_PATH_MAX=4
   _PC_PIPE_BUF=5
   _PC_PRIO_IO=10
   _PC_SYNC_IO=11
   _PC_VDISABLE=8
   _POINTER_INT=long
   _Pragma(arg)=
   _PTR=void *
   _PTRDIFF_T=
   _PTRDIFF_T_=
   _RAND48_ADD=(0x000b)
   _RAND48_MULT_0=(0xe66d)
   _RAND48_MULT_1=(0xdeec)
   _RAND48_MULT_2=(0x0005)
   _RAND48_SEED_0=(0x330e)
   _RAND48_SEED_1=(0xabcd)
   _RAND48_SEED_2=(0x1234)
   _READ_WRITE_RETURN_TYPE=int
   _REENT=_impure_ptr
   _REENT_ASCTIME_BUF(ptr)=((ptr)->_new._reent._asctime_buf)
   _REENT_ASCTIME_SIZE=26
   _REENT_CHECK_ASCTIME_BUF(ptr)=
   _REENT_CHECK_EMERGENCY(ptr)=
   _REENT_CHECK_MISC(ptr)=
   _REENT_CHECK_MP(ptr)=
   _REENT_CHECK_RAND48(ptr)=
   _REENT_CHECK_SIGNAL_BUF(ptr)=
   _REENT_CHECK_TM(ptr)=
   _REENT_EMERGENCY(ptr)=((ptr)->_emergency)
   _REENT_EMERGENCY_SIZE=25
   _REENT_GETDATE_ERR_P(ptr)=(&((ptr)->_new._reent._getdate_err))
   _REENT_INIT(var)={ 0, &var.__sf[0], &var.__sf[1], &var.__sf[2], 0, "", 0, "C", 0, _NULL, _NULL, 0, _NULL, _NULL, 0, _NULL, { {0, _NULL, "", { 0,0,0,0,0,0,0,0}, 0, 1, {{_RAND48_SEED_0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0, _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD}, {0, {0}}, {0, {0}}, {0, {0}}, "", "", 0, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } } }
   _REENT_INIT_PTR(var)={ int i; char *tmp_ptr; var->_errno = 0; var->_stdin = &var->__sf[0]; var->_stdout = &var->__sf[1]; var->_stderr = &var->__sf[2]; var->_inc = 0; for (i = 0; i < _REENT_EMERGENCY_SIZE; ++i) var->_emergency[i] = 0; var->_current_category = 0; var->_current_locale = "C"; var->__sdidinit = 0; var->__cleanup = _NULL; var->_result = _NULL; var->_result_k = 0; var->_p5s = _NULL; var->_freelist = _NULL; var->_cvtlen = 0; var->_cvtbuf = _NULL; var->_new._reent._unused_rand = 0; var->_new._reent._strtok_last = _NULL; var->_new._reent._asctime_buf[0] = 0; tmp_ptr = (char *)&var->_new._reent._localtime_buf; for (i = 0; i < sizeof(struct __tm); ++i) tmp_ptr[i] = 0; var->_new._reent._gamma_signgam = 0; var->_new._reent._rand_next = 1; var->_new._reent._r48._seed[0] = _RAND48_SEED_0; var->_new._reent._r48._seed[1] = _RAND48_SEED_1; var->_new._reent._r48._seed[2] = _RAND48_SEED_2; var->_new._reent._r48._mult[0] = _RAND48_MULT_0; var->_new._reent._r48._mult[1] = _RAND48_MULT_1; var->_new._reent._r48._mult[2] = _RAND48_MULT_2; var->_new._reent._r48._add = _RAND48_ADD; var->_new._reent._mblen_state.__count = 0; var->_new._reent._mblen_state.__value.__wch = 0; var->_new._reent._mbtowc_state.__count = 0; var->_new._reent._mbtowc_state.__value.__wch = 0; var->_new._reent._wctomb_state.__count = 0; var->_new._reent._wctomb_state.__value.__wch = 0; var->_new._reent._mbrlen_state.__count = 0; var->_new._reent._mbrlen_state.__value.__wch = 0; var->_new._reent._mbrtowc_state.__count = 0; var->_new._reent._mbrtowc_state.__value.__wch = 0; var->_new._reent._mbsrtowcs_state.__count = 0; var->_new._reent._mbsrtowcs_state.__value.__wch = 0; var->_new._reent._wcrtomb_state.__count = 0; var->_new._reent._wcrtomb_state.__value.__wch = 0; var->_new._reent._wcsrtombs_state.__count = 0; var->_new._reent._wcsrtombs_state.__value.__wch = 0; var->_new._reent._l64a_buf[0] = '\0'; var->_new._reent._signal_buf[0] = '\0'; var->_new._reent._getdate_err = 0; var->_atexit = _NULL; var->_atexit0._ind = 0; var->_atexit0._fns[0] = _NULL; var->_atexit0._on_exit_args._fntypes = 0; var->_atexit0._on_exit_args._fnargs[0] = _NULL; var->_sig_func = _NULL; var->__sglue._next = _NULL; var->__sglue._niobs = 0; var->__sglue._iobs = _NULL; memset(var->__sf,0,sizeof(var->__sf)); }
   _REENT_L64A_BUF(ptr)=((ptr)->_new._reent._l64a_buf)
   _REENT_MBLEN_STATE(ptr)=((ptr)->_new._reent._mblen_state)
   _REENT_MBRLEN_STATE(ptr)=((ptr)->_new._reent._mbrlen_state)
   _REENT_MBRTOWC_STATE(ptr)=((ptr)->_new._reent._mbrtowc_state)
   _REENT_MBSRTOWCS_STATE(ptr)=((ptr)->_new._reent._mbsrtowcs_state)
   _REENT_MBTOWC_STATE(ptr)=((ptr)->_new._reent._mbtowc_state)
   _REENT_MP_FREELIST(ptr)=((ptr)->_freelist)
   _REENT_MP_P5S(ptr)=((ptr)->_p5s)
   _REENT_MP_RESULT(ptr)=((ptr)->_result)
   _REENT_MP_RESULT_K(ptr)=((ptr)->_result_k)
   _REENT_RAND48_ADD(ptr)=((ptr)->_new._reent._r48._add)
   _REENT_RAND48_MULT(ptr)=((ptr)->_new._reent._r48._mult)
   _REENT_RAND48_SEED(ptr)=((ptr)->_new._reent._r48._seed)
   _REENT_RAND_NEXT(ptr)=((ptr)->_new._reent._rand_next)
   _REENT_SIGNAL_BUF(ptr)=((ptr)->_new._reent._signal_buf)
   _REENT_SIGNAL_SIZE=24
   _REENT_SIGNGAM(ptr)=((ptr)->_new._reent._gamma_signgam)
   _REENT_SMALL_CHECK_INIT(fp)=
   _REENT_STRTOK_LAST(ptr)=((ptr)->_new._reent._strtok_last)
   _REENT_TM(ptr)=(&(ptr)->_new._reent._localtime_buf)
   _REENT_WCRTOMB_STATE(ptr)=((ptr)->_new._reent._wcrtomb_state)
   _REENT_WCSRTOMBS_STATE(ptr)=((ptr)->_new._reent._wcsrtombs_state)
   _REENT_WCTOMB_STATE(ptr)=((ptr)->_new._reent._wctomb_state)
   _S=010
   _SC_AIO_LISTIO_MAX=34
   _SC_AIO_MAX=35
   _SC_AIO_PRIO_DELTA_MAX=36
   _SC_ARG_MAX=0
   _SC_ASYNCHRONOUS_IO=21
   _SC_AVPHYS_PAGES=12
   _SC_CHILD_MAX=1
   _SC_CLK_TCK=2
   _SC_DELAYTIMER_MAX=37
   _SC_FSYNC=22
   _SC_GETGR_R_SIZE_MAX=50
   _SC_GETPW_R_SIZE_MAX=51
   _SC_JOB_CONTROL=5
   _SC_LOGIN_NAME_MAX=52
   _SC_MAPPED_FILES=23
   _SC_MEMLOCK=24
   _SC_MEMLOCK_RANGE=25
   _SC_MEMORY_PROTECTION=26
   _SC_MESSAGE_PASSING=27
   _SC_MQ_OPEN_MAX=13
   _SC_MQ_PRIO_MAX=14
   _SC_NGROUPS_MAX=3
   _SC_NPROCESSORS_CONF=9
   _SC_NPROCESSORS_ONLN=10
   _SC_OPEN_MAX=4
   _SC_PAGESIZE=8
   _SC_PHYS_PAGES=11
   _SC_PRIORITIZED_IO=28
   _SC_PRIORITY_SCHEDULING=101
   _SC_REALTIME_SIGNALS=29
   _SC_RTSIG_MAX=15
   _SC_SAVED_IDS=6
   _SC_SEMAPHORES=30
   _SC_SEM_NSEMS_MAX=16
   _SC_SEM_VALUE_MAX=17
   _SC_SHARED_MEMORY_OBJECTS=31
   _SC_SIGQUEUE_MAX=18
   _SC_STREAM_MAX=100
   _SC_SYNCHRONIZED_IO=32
   _SC_THREADS=42
   _SC_THREAD_ATTR_STACKADDR=43
   _SC_THREAD_ATTR_STACKSIZE=44
   _SC_THREAD_DESTRUCTOR_ITERATIONS=53
   _SC_THREAD_KEYS_MAX=38
   _SC_THREAD_PRIORITY_SCHEDULING=45
   _SC_THREAD_PRIO_CEILING=_SC_THREAD_PRIO_PROTECT
   _SC_THREAD_PRIO_INHERIT=46
   _SC_THREAD_PRIO_PROTECT=47
   _SC_THREAD_PROCESS_SHARED=48
   _SC_THREAD_SAFE_FUNCTIONS=49
   _SC_THREAD_STACK_MIN=39
   _SC_THREAD_THREADS_MAX=40
   _SC_TIMERS=33
   _SC_TIMER_MAX=19
   _SC_TTY_NAME_MAX=41
   _SC_TZNAME_MAX=20
   _SC_VERSION=7
   _SIGNED=signed
   _SIZET_=
   _SIZE_T=
   _SIZE_T_=
   _SIZE_T_DECLARED=
   _SIZE_T_DEFINED=
   _SIZE_T_DEFINED_=
   _STDARG_H=
   _STDDEF_H=
   _STDDEF_H_=
   _stderr_r(x)=((x)->_stderr)
   _stdin_r(x)=((x)->_stdin)
   _STDIO_H_=
   _STDLIB_H_=
   _stdout_r(x)=((x)->_stdout)
   _STRING_H_=
   _ST_INT32=
   _SYS_ERRNO_H_=
   _SYS_FEATURES_H=
   _SYS_REENT_H_=
   _SYS_SIZE_T_H=
   _SYS_TYPES_FD_SET=
   _SYS_TYPES_H=
   _SYS_UNISTD_H=
   _SYS__TYPES_H=
   _TIMER_T_=unsigned long
   _TIME_T_=long
   _T_PTRDIFF=
   _T_PTRDIFF_=
   _T_SIZE=
   _T_SIZE_=
   _T_WCHAR=
   _T_WCHAR_=
   _U=01
   _UNISTD_H_=
   _VA_LIST=
   _VA_LIST_=
   _VA_LIST_DEFINED=
   _VA_LIST_T_H=
   _VOID=void
   _VOLATILE=volatile
   _WCHAR_T=
   _WCHAR_T_=
   _WCHAR_T_DECLARED=
   _WCHAR_T_DEFINED=
   _WCHAR_T_DEFINED_=
   _WCHAR_T_H=
   _X=0100
   __ALTERA_AVALON_JTAG_UART=
   __ALTERA_AVALON_ONCHIP_MEMORY2=
   __ALTERA_AVALON_UART=
   __ALTERA_NIOS2=
   __ALT_STDIO_H__=
   __ALT_TYPES_H__=
   __ATTRIBUTE_IMPURE_PTR__=
   __builtin_constant_p(exp)=0
   __builtin_types_compatible_p(x,y)=__builtin_types_compatible_p(sizeof(x),sizeof(y))
   __builtin_va_arg(ap,type)=*(type *)ap
   __CDT_PARSER__=1
   __clock_t_defined=
   __complex__=_Complex
   __DATE__="gen 31 2014"
   __ELASTERROR=2000
   __ERRNO_H__=
   __errno_r(ptr)=((ptr)->_errno)
   __error_t_defined=1
   __extension__=
   __FILE__="file"
   __GNUC_VA_LIST=
   __IEEE_LITTLE_ENDIAN=
   __imag__=(int)
   __IMPORT=
   __INTTYPES_DEFINED__=
   __INT_MAX__=2147483647
   __INT_WCHAR_T_H=
   __IO_CALC_ADDRESS_DYNAMIC(BASE,OFFSET)=((void *)(((alt_u8*)BASE) + (OFFSET)))
   __IO_CALC_ADDRESS_NATIVE(BASE,REGNUM)=((void *)(((alt_u8*)BASE) + ((REGNUM) * (SYSTEM_BUS_WIDTH/8))))
   __IO_H__=
   __LINE__=1
   __LINKER_H_=
   __Long=long
   __LONG_MAX__=2147483647L
   __MMSLAVEINT=
   __need_ptrdiff_t=
   __need_size_t=
   __need_wchar_t=
   __need_wint_t=
   __need___va_list=
   __NEWLIB_H__=1
   __null=(void*)0
   __PTRDIFF_T=
   __PTRDIFF_TYPE__=long int
   __RAND_MAX=0x7fffffff
   __real__=(int)
   __SAPP=0x0100
   __sclearerr(p)=((void)((p)->_flags &= ~(__SERR|__SEOF)))
   __SEOF=0x0020
   __SERR=0x0040
   __sfeof(p)=(((p)->_flags & __SEOF) != 0)
   __sferror(p)=(((p)->_flags & __SERR) != 0)
   __sfileno(p)=((p)->_file)
   __sgetc(p)=__sgetc_raw(p)
   __sgetc_raw(p)=(--(p)->_r < 0 ? __srget(p) : (int)(*(p)->_p++))
   __SIZE_T=
   __SIZE_TYPE__=long unsigned int
   __size_t__=
   __SL64=0x8000
   __SLBF=0x0001
   __SMBF=0x0080
   __SMOD=0x2000
   __SNBF=0x0002
   __SNPT=0x0800
   __SOFF=0x1000
   __SOPT=0x0400
   __sputc(c,p)=__sputc_raw(c, p)
   __sputc_raw(c,p)=(--(p)->_w < 0 ? (p)->_w >= (p)->_lbfsize ? (*(p)->_p = (c)), *(p)->_p != '\n' ? (int)*(p)->_p++ : __swbuf('\n', p) : __swbuf((int)(c), p) : (*(p)->_p = (c), (int)*(p)->_p++))
   __SRD=0x0004
   __SRW=0x0010
   __SSTR=0x0200
   __stdcall=
   __STDC_HOSTED_=1
   __STDC_VERSION_=199901L
   __STDC__=1
   __STDDEF_H__=
   __SWR=0x0008
   __SYSTEM_H_=
   __SYS_CONFIG_H__=
   __time_t_defined=
   __TIME__="15:11:01"
   __VALIST=char*
   __va_copy(d,s)=__builtin_va_copy(d,s)
   __va_list__=
   __WCHAR_T=
   __WCHAR_TYPE__=int
   __wchar_t__=
   ___int_ptrdiff_t_h=
   ___int_size_t_h=
   ___int_wchar_t_h=

Macro definitions (from files actually parsed):
   DELAY(t_us)=wait(2 * (t_us))
   ETH_REG0=(0x840)
   ETH_REG14=(0x878)
   ETH_REG15=(0x87C)
   ETH_REG1=(0x844)

Unresolved includes (from headers in index):

Scanner problems:

Parser problems:

Unresolved names:

Exceptions in name resolution:
